/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitions
    #define BASE 0
    #define SYM 1
    #define EXT 2
    #define FNC 3
    #define NUM 4
    #define ACCENT 5
		#define SETTINGS 6
		#define GAMEING 7
// -----------------

&mt {
 //   flavor = "tap-preferred";
 //   tapping_term_ms = <250>;
};



/ {
		macros {
				// sometimes my device thinks a modifier is being held down
				// pressing all modifiers fixes it.
				unstick: unstick {
					label = "ZM_unstick";
					compatible = "zmk,behavior-macro";
					#binding-cells = <0>;
					bindings
						= <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
				};
		};

    combos {
        compatible = "zmk,combos";
				// both right thumb keys
        combo_accent {
            timeout-ms = <300>;
            key-positions = <32 33>;
            bindings = <&mo ACCENT>;
        };
				// internal-left & external-right thumb keys
				combo_sym2 {
						timeout-ms = <200>;
						key-positions = <31 33>;
						bindings = <&mo NUM>;
				};
				// both left thumb keys
				combo_settings {
						timeout-ms = <300>;
						key-positions = <30 31>;
						bindings = <&mo SETTINGS>;
				};
				combo_shift {
						timeout-ms = <300>;
						key-positions = <31 32>;
						bindings = <&kp LSHIFT>;
				};
    };

behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
//	td: tapdance {
//            compatible = "zmk,behavior-hold-tap";
//            label = "TAPDANCE";
//            #binding-cells = <2>;
//            tapping-term-ms = <150>;
//            quick_tap_ms = <0>;
//            flavor = "tap-preferred";
//            bindings = <&kp>, <&kp>;
//        };
    };
	 

    keymap {
            compatible = "zmk,keymap";

				
        // Base alpha layer
//       		default_layer {
//		bindings = <
//		&kp Q &kp W &kp F &kp P &kp B           &kp J &kp L  &kp U     &kp Y   &kp SEMICOLON
//		&hm LALT A &hm LGUI R &hm LSHIFT S &hm LCTRL T &kp G           &kp M &hm RCTRL N  &hm RSHIFT E     &hm RGUI I &hm RALT O
//		&kp X &kp C &kp D &kp V &kp Z           &kp K &kp H  &kp COMMA &kp DOT &kp SLASH
//             //&lt NUM G &lt EXT SPACE           &lt SYM BSPC &lt FNC M
//             &lt NUM W &lt EXT SPACE           &lt SYM BSPC &lt FNC G
//		>;
//		};
       		default_layer {
		bindings = <
		&kp Z &kp L &kp R &kp B &kp Z           &kp SEMICOLON &kp Q  &kp U     &kp D   &kp J
		&hm LALT S &hm LGUI H &hm LSHIFT N &hm LCTRL T &kp ESC           &kp W &hm RCTRL A  &hm RSHIFT E     &hm RGUI O &hm RALT I
		&kp F &kp M &kp V &kp C &kp SLASH           &kp G &kp P  &kp X &kp K &kp Y
             &lt NUM W &lt EXT SPACE           &lt SYM BSPC &lt FNC G
		>;
		};

        // Numbers and high frequency symbols
       		sym_layer {
		bindings = <
			&kp N1 &kp GRAVE &kp LBKT &kp RBKT &kp BSLH		                                    &kp STAR &kp EQUAL &kp DLLR &kp N9 &kp N0
		&kp PLUS &kp AT &kp HASH &kp MINUS &kp DQT  			&kp EXCL &kp LPAR &kp RPAR &kp UNDER &kp PRCNT
		&kp QMARK &kp PIPE &kp LBRC &kp RBRC &kp SQT 					&kp TILDE &kp LBKT &kp RBKT &trans &trans
                                        &kp LGUI  &kp LSHIFT       &mo NUM &trans
		>;
		};

        // Main modifiers and arrow keys
		    ext_layer {
		bindings = <
		&kp K_VOL_UP  &kp K_APP &trans  &kp PSCRN  &kp PSCRN    			        &trans  &trans &kp COLON &trans &trans
		&sk LALT &kp BSPC &kp ENTER &kp TAB  &kp RALT 			&trans &kp LEFT  &kp DOWN  &kp UP &kp RIGHT
		&kp K_VOL_DN  &kp SQT &kp ENTER &kp TAB   &trans          &trans &kp ESC &kp COMMA &kp DOT &kp SLASH
					                        &trans &kp LCTRL    &kp DEL  &mo FNC 
		>;
		};

        // Function keys with modifiers
       		fnc_layer {
		bindings = <
		&none &none &none &none &none                  &none &none &none &none &none 
		&none &none &none &none &none     &none &none  &none &none &none
		&none &none &none &none &none				          &none &none &none &none &none 
          				           &none &none              &none &none  
		>;
		};
//       		fnc_layer {
//		bindings = <
//		&none &none &none &none &none                  &none &none &mkp MCLK &none &none 
//		&none &none &mwh SCROLL_DOWN &mwh SCROLL_UP &none     &none &mmv MOVE_LEFT  &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT
//		&none &none &kp SEMICOLON &kp COLON &none				          &none &none &none &none &none 
//          				           &mkp LCLK &mkp RCLK              &none &none  
//		>;
//		};

        // Low frequency symbols.
       		NUMBER_layer {
		bindings = <
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5         &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
		&kp N1 &kp N2 &kp N3 &kp N4 &kp N5		                                    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
		&kp F11 &kp BSLH &kp SLASH &kp N5 &none         &none &kp N6 &kp COMMA &kp DOT &kp F12 

          				           												&none &none        	&kp LSHIFT &kp BSPC
		>;
		};

        // Used to type regional accents.
       		accent_layer {
		bindings = <
		&none &none &none &none &none                         &none &none &none &none &none 
		&none &none &kp M &none &none                         &none &none &none &none &none
		&none &none &none &none &none                         &none &none &none &none &none
          				     &none &none                         &none &none 
		>;
		};

        // Used to change the keyboard's settings.
       		settings_layer {
		bindings = <
		&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader 
		&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
		&none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none
          				     &none &none                         &none &none 
		>;
		};
       		gaming_layer {
		bindings = <
		&none &none &kp W &none &none               &none &none &none &none &none 
		&none &kp A &kp S &kp D &none 				  &none &none &none &none &none
		&none &none &none &none &none               &none &none &none &none &none
          				     &none &none                         &none &none 
		>;
		};
        
	};
};
